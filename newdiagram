#! /bin/bash
## Usage: newdiagram (filename)
## Creates and opens a ready-to-use LaTeX file with my default diagram template.
## Replace the value of $text with your desired content.
## If no filename is given, produces 'new-diagram.tex'

text="\documentclass[12pt]{article}
\usepackage{mary-trees}
\input{abbrevs}
\usepackage{ling-packages-bundle}
\usepackage[sc]{mathpazo}
\begin{document}
\thispagestyle{empty}
% Write here

\end{document}"

filenumber=1

## Cleans input so user can include the .tex the extension or not.
if [[ "$1" == *.tex ]]
then
  filename=${1/.tex/}
else
  filename=${1:-"new-diagram"}
fi

## Counts how many untitled ('new-diagram') files already exist past the first.
while [[ -f "new-diagram($filenumber).tex" ]]; do
  filenumber=$((filenumber+1))
done

## If making a blank file, calls it 'new-diagram'; if there's already a file called 'new-diagram', adds bracketed numbers after to differentiate (so you won't overwrite your blank file if you make another one).
if [[ "$filename" == "new-diagram" ]]; then
  if [[ -f "new-diagram.tex" ]]; then
    echo "$text" > "$filename($filenumber).tex"
		open "$filename($filenumber).tex"
  else
    echo "$text" > "$filename.tex"
		open "$filename.tex"
  fi
## Checks if your filename is in use -- returns error if so, otherwise makes it.
else
  if [[ -f "$filename.tex" ]]
  then
    echo "Error: file already exists!"
  else
    echo "$text" > "$filename.tex"
		open "$filename.tex"
  fi
fi
